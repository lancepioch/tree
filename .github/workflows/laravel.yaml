name: Laravel

on:
  push:
    branches:
      - "develop"
      - "master"
  pull_request:
    branches:
      - "develop"
      - "master"

jobs:
  analysis:
    name: Static Analysis
    runs-on: ubuntu-20.04
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: bcmath, cli, curl, gd, mbstring, mysql, openssl, pdo, tokenizer, xml, zip
          tools: composer:v2
          coverage: none

      - name: Install Dependencies
        run: composer install --no-interaction --no-progress --no-suggest --prefer-dist

      - name: Analyze
        run: vendor/bin/phpstan analyse

  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: bcmath, curl, gd, mbstring, mysql, openssl, pdo, tokenizer, xml, zip
          tools: composer:v2
          coverage: none

      - name: Install Dependencies
        run: composer install --no-interaction --no-progress --no-suggest --prefer-dist

      - name: Run Pint
        run: vendor/bin/pint --test

  tests:
    name: Feature Tests
    runs-on: ubuntu-20.04
    if: "!contains(github.event.head_commit.message, 'skip ci') && !contains(github.event.head_commit.message, 'ci skip')"
    strategy:
      fail-fast: false
      matrix:
        php: [8.2, 8.3]
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: bcmath, cli, curl, gd, mbstring, mysql, openssl, pdo, tokenizer, xml, zip
          tools: composer:v2
          coverage: none

      - name: Install Dependencies
        run: composer install --no-interaction --no-progress --no-suggest --prefer-dist

      - name: Copy Env File
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Generate App Key
        run: php artisan key:generate

      - name: Create Database
        run: touch database/database.sqlite

      - name: Execute PHPUnit tests
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: vendor/bin/phpunit
